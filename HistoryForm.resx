<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>